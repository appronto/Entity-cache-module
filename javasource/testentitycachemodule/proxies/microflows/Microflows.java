// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testentitycachemodule.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;

public class Microflows
{
	// These are the microflows for the TestEntityCacheModule module
	public static void aT_Get(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("TestEntityCacheModule.AT_Get").withParams(params).execute(context);
	}
	public static void aT_Set(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("TestEntityCacheModule.AT_Set").withParams(params).execute(context);
	}
	public static void setup(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("TestEntityCacheModule.Setup").withParams(params).execute(context);
	}
	public static void teardown(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("TestEntityCacheModule.Teardown").withParams(params).execute(context);
	}
	public static boolean test_Empty_Retrieve(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Boolean) Core.microflowCall("TestEntityCacheModule.Test_Empty_Retrieve").withParams(params).execute(context);
	}
	public static boolean test_Exception_Replace(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Boolean) Core.microflowCall("TestEntityCacheModule.Test_Exception_Replace").withParams(params).execute(context);
	}
	public static boolean test_Performance_1000_Cache(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Boolean) Core.microflowCall("TestEntityCacheModule.Test_Performance_1000_Cache").withParams(params).execute(context);
	}
	public static boolean test_Performance_1000_DB(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Boolean) Core.microflowCall("TestEntityCacheModule.Test_Performance_1000_DB").withParams(params).execute(context);
	}
	public static void test_Remove_Fail_Example(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("TestEntityCacheModule.Test_Remove_Fail_Example").withParams(params).execute(context);
	}
	public static void test_Remove_Success_Example(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("TestEntityCacheModule.Test_Remove_Success_Example").withParams(params).execute(context);
	}
	public static void test_Upsert_Example(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("TestEntityCacheModule.Test_Upsert_Example").withParams(params).execute(context);
	}
}